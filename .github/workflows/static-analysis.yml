name: Static Analysis

on:
  pull_request:
jobs:
  linting:
    runs-on: ubuntu-latest
    timeout-minutes: 9

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        pip install pylint 
        pip install -r requirements.txt

    - name: Run Pylint and generate report
      run: |
        find suprb/ -name "*.py" -print0 | xargs -0 -n 1 -P 4 pylint --max-line-length=120 --output-format=text > pylint-report.txt || true

    - name: Upload pylint report
      uses: actions/upload-artifact@v3
      with:
        name: pylint-report
        path: pylint-report.txt

    - name: Check Pylint report for issues
      id: check_pylint
      run: |
        if grep -qE "^[^ ]+:([0-9]+):([0-9]+): (error|warning)" pylint-report.txt; then
          echo "has_issues=true" >> $GITHUB_ENV
        else
          echo "has_issues=false" >> $GITHUB_ENV

    - name: Post comment on PR if there are issues
      if: env.has_issues == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('pylint-report.txt', 'utf8');
          const issueComment = `### Pylint Report\n\`\`\`\n${report}\n\`\`\`\n`;
          await github.rest.issues.createComment({
            ...context.repo,
            issue_number: context.issue.number,
            body: issueComment
          });
