name: Static Analysis

on:
  pull_request:
jobs:
  linting:
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 9

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        pip install pylint 
        pip install -r requirements.txt

    - name: Run Pylint
      continue-on-error: true
      run: |
          find suprb/ -name "*.py" -print0 | xargs -0 -n 1 -P 4 pylint --max-line-length=120 --output-format=text > pylint-report.txt
          exit_code=$?
          if [ $exit_code -ne 0 ]; then
            echo "Pylint returned errors. Check the report."
          fi
          exit $exit_code

    - name: Determine status
      id: check-status
      run: |
          if grep -q "Your code has been rated at" pylint-report.txt; then
            if grep -q "Your code has been rated at 10.00/10" pylint-report.txt; then
              echo "status=success" >> $GITHUB_ENV
            else
              echo "status=warning" >> $GITHUB_ENV
            fi
          else
            echo "status=failure" >> $GITHUB_ENV
            exit 1
          fi
    
    - name: Upload Pylint report as artifact
      uses: actions/upload-artifact@v3
      with:
        name: pylint-report
        path: pylint-report.txt
  
    - name: Set conclusion
      if: always()
      run: |
        if [ "$status" == "success" ]; then
          echo "Linting passed without warnings or errors."
        elif [ "$status" == "warning" ]; then
          echo "::warning::Linting passed with warnings. Review the pylint report."
        else
          echo "::error::Linting failed. Please fix the errors."
